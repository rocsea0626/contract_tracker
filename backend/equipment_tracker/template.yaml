AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  contract_tracker

  Sample SAM Template for contract_tracker
  
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
    Environment:
      Variables:
        DYNAMO_TABLE_NAME: !Ref EquipmentsTable

Resources:
  CommonLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: common-dependencies
      Description: Common dependencies
      ContentUri: layers/
      CompatibleRuntimes:
        - nodejs12.x
      RetentionPolicy: Retain

  GetEquipment:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: handlers/get-equipment/
      Layers:
        - !Ref CommonLayer
      Handler: app.lambdaHandler
      Runtime: nodejs12.x
      Architectures:
        - x86_64
      Events:
        GetEquipment:
          Type: Api
          Properties:
            Path: /equipment
            Method: get

  CreateEquipment:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: handlers/create-equipment/
      Layers:
        - !Ref CommonLayer
      Handler: app.lambdaHandler
      Runtime: nodejs12.x
      Architectures:
        - x86_64
      Events:
        CreateEquipment:
          Type: Api
          Properties:
            Path: /equipment
            Method: post
  HelloWorldFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: hello-world/
      Handler: app.lambdaHandler
      Runtime: nodejs12.x
      Architectures:
        - x86_64
      Events:
        HelloWorld:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /hello
            Method: get

  EquipmentsTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Retain
    Properties:
      TableName: EquipmentsTable
      AttributeDefinitions:
        - AttributeName: EquipmentNumber
          AttributeType: S
      KeySchema:
        - AttributeName: EquipmentNumber
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 1

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  HelloWorldApi:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
  HelloWorldFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt HelloWorldFunction.Arn
  HelloWorldFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt HelloWorldFunctionRole.Arn
  CommonLayer:
    Description: "CommonLayer Function ARN"
      Value: !GetAtt CommonLayer.Arn
  CommonLayerIamRole:
    Description: "Implicit IAM Role created for CommonLayer function"
    Value: !GetAtt CommonLayerRole.Arn
  GetEquipment:
    Description: "GetEquipment Function ARN"
      Value: !GetAtt GetEquipment.Arn
  GetEquipmentIamRole:
    Description: "Implicit IAM Role created for GetEquipment function"
    Value: !GetAtt GetEquipmentRole.Arn
  CreateEquipment:
    Description: "CreateEquipment Function ARN"
      Value: !GetAtt CreateEquipment.Arn
  CreateEquipmentIamRole:
    Description: "Implicit IAM Role created for CreateEquipment function"
    Value: !GetAtt CreateEquipmentRole.Arn
  EquipmentsTableName:
    Description: "Name of created database table"
    Value: !Select [ 1, !Split [ '/', !GetAtt EquipmentsTable.Arn ] ]